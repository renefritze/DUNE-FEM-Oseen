/** \page svnhelp Some Notes on Using Subversion
 *
 *  \section svnupdate Updating Your Working Copy
 *
 *  To update your working copy, simply type
 *  \code
 *  svn update
 *  \endcode
 *
 *  \note You can also downgrade to an older revision by
 *  \code
 *  svn update -r <revision>
 *  \endcode
 *  Alternatively, use the date DD.MM.YYYY specify the revision by
 *  \code
 *  svn update -r "{YYYYMMDD}"
 *  \endcode
 *
 *  \section svnstatus Obtaining a List of Files You Changed
 *
 *  When making changes one simetimes forgets all the files that have changes.
 *  Subversion can give you an overview over the changed files by
 *  \code
 *  svn status
 *  \endcode
 *
 *  \note Files marked by a question mark have not been added to version control.
 *        You should add them, before committing your changes.
 *
 *  \section svncommit Committing Your Changes to the Repository
 *  
 *  After making changes to your working copy and successfully testing them,
 *  you have to commit them to the repository before others can use them. To do
 *  so, use
 *  \code
 *  svn commit -m "<message>"
 *  \endcode
 *
 *  \note You can explicitly specify which files should be committed by adding
 *        them to the command line.
 *
 *  \section svnadd Adding files to version control
 *
 *  After creating a new file that shall be under version control, you have to
 *  type
 *  \code
 *  svn add <name>
 *  \endcode
 *
 *  \note The file will not be in the repository until you commit your changes.
 *
 *  \note You cannot simply remove the newly added file from version control before
 *        it has been committed. If you want to do so, use
 *        \code
 *        svn rm --force <name>
 *        \endcode
 *        The same applies to the move operation
 *
 *  \section svnrm Removing a File from Version Control
 *
 *  To remove a file under version control, you can use
 *  \code
 *  svn rm <name>
 *  \endcode
 *
 *  \note Subversion will actually delete the file, so if you want to keep it
 *        you should create a backup first.
 *
 *  \section svnmv Moving version controlled files
 *
 *  If a file is under version control and you want to rename or move it, you
 *  should not do so yourself, but let subversion do it for you:
 *  \code
 *  svn mv <oldname> <newname>
 *  \endcode
 *
 *  Subversion does not only move the file, but also remembers the version
 *  history of that file.
 *
 *  \note Moving the file by hand, telling subversion to delete the old file
 *        and adding the new one is a bad idea. Subversion does not know the
 *        files are actually the same and hence cannot merge differences (or
 *        detect conflicts).
 *
 *  \section svnignore Specifying File Names that Subversion Should Ignore
 *  
 *  When looking for changed files, subversion should automatically some files
 *  generated during compilation like object files, log files, etc. Subversion
 *  keeps a seperate list which file patterns to ignore for each directory. You
 *  can edit that list by the following command:
 *  \code
 *  svn propedit svn:ignore <directory>
 *  \endcode
 *
 *  \note Changes to properties must be committed, too.
 */
