# LOG_NONE = 1, LOG_ERR = 2, LOG_INFO = 4,LOG_DEBUG = 8,LOG_CONSOLE = 16,LOG_FILE = 32
# --> LOG_ERR | LOG_INFO | LOG_DEBUG | LOG_FILE = 46
# ANY odd number will disable ALL logging
# max logging: 62
loglevel: 62

#only prefix
logfile: dune_stokes

#path (relative to binary) where .vtu etc will be saved
fem.io.datadir: data
#path (relative to binary) where logs and matlab files will be saved
fem.io.logdir: log
fem.io.outputformat: 2
fem.io.datafileprefix: solu_
fem.io.savestep: 0
fem.io.savecount: 0
# write solution vtk every N iterations ( < 1 to disable )
save_interval: -1

#use this to seperate tokens in a paramter list
parameterlist_delimiter: ;

per-run-log-target: 1
per-run-output: 1

#basename for output files in visualisation program
visualisationOutputDir: data/visualisation
#show grape online in visualisation program?
use_grape: 0

#
dgf_file_2d: grid_2d.dgf
dgf_file_3d: grid_3d.dgf
# scale domain to have length 2
domain_scale_x: 2.0
domain_scale_y: 2.0
# shift domain to be [-1;1]^2
domain_shift_x: -1.0
domain_shift_y: -1.0

#*********** runtype specific parameters **************************************************
# runtype 		0: minref <= maxref
#			1: minref, stab coeff are varied
#			2: minref, bfg-tau-start <= bfg-tau-stop
#			3: minref, accuracy_start <= accuracy_stop + inner lopo for inner acc
#			4: minref, accuracy_start <= accuracy_stop
#			5: one single run with minref
# no runtype set --> old minrun behavior
runtype: 5

#in runtype 0 refine maxref + 1 - minref times
maxref: 1

#in runtype 1 vary
minpow: -1
maxpow: 1
minfactor: 0.0
maxfactor: 2.0
incfactor: 0.5

#parameters for runtype 2, do-bfg and bfg-tau are ignored there
bfg-tau-start: 0
bfg-tau-stop: 0.5
bfg-tau-inc: 0.075

#parameters for runtype 3,
accurracy_start: 10e-5
accurracy_factor: 10e-3
accurracy_steps: 5

#*********** end runtype specific parameters **************************************************

# if alpha != 0.0, isGeneralize() has to return true in DiscreteStokesModelDefault

#****************** solver ******************************************************************
#pretty much ineffective
relLimit: 1e-10

absLimit: 1e-08
inner_absLimit: 1e-08

#reconstruct u at the ned of alt_solver instead of continually updating it
use_velocity_reconstruct: 0
#clear computed functions at start of every singleRun ?
clear_u: 1
clear_p: 0

#when nans are detected in solution solver accuracy is multiplied maximal max_adaptions-times by 0.1
max_adaptions: 5

# > 2 will show bfg setting per inner iteration, > 1 avg inner iteration count
solverVerbosity: 1
disableSolver: 0
diff-tolerance: 0.01
do-bfg: 0
bfg-tau: 0.1
minref: 3
use_nested_cg_solver: 0
use_full_solver: 1
viscosity: 1.0
alpha: 1.0
#if using alternative solver break after max maxIter outer iterations
maxIter: 5000
#****************** end solver ******************************************************************


#****************** pass ********************************************************************
#output:
outputMatrixPlots: 0
Mprint: 0
Wprint: 0
Xprint: 0
Yprint: 0
Zprint: 0
Eprint: 0
Rprint: 0
H1print: 0
H2print: 0
H3print: 0
allOutput: 0
Mdebug: 0
Wdebug: 0
Xdebug: 0
Ydebug: 0
Zdebug: 0
Edebug: 0
Rdebug: 0
H1debug: 0
H2debug: 0
H3debug: 0
solution-print: 0

logBaseI: -1
logBaseJ: -1

#****************** end pass ********************************************************************

#****************** PROBLEM *********************************************************************
#used in AORTA_PROBLEM to scale normals used as inital data for velocity
gd_factor: 1.0
zeroBoundaryIds: 1
influxBoundaryIds: 2;3;4
outfluxBoundaryIds: 5;6
#****************** END PROBLEM *****************************************************************


#deprecated
use-cheat: 0

eps: 1.0e-14

h-factor: 1.0

func_x: sin(x)*(t-1)
func_y: exp(y)
func_z: z